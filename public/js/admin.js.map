{"version":3,"sources":["webpack:///./node_modules/halfmoon/index.js","webpack:///./node_modules/halfmoon/js/halfmoon-module.js"],"names":[],"mappings":";;;;;;;;;AAAA,eAAe,mBAAO,CAAC,2EAAsB;;AAE7C,0B;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,mLAAmL,aAAa,kBAAkB,qFAAqF,qCAAqC,iCAAiC,0BAA0B,IAAI,uCAAuC,SAAS,iBAAiB,qDAAqD,iBAAiB,mEAAmE,oGAAoG,mBAAmB,eAAe,mFAAmF,IAAI,oBAAoB,iCAAiC,yCAAyC,wBAAwB,oBAAoB,oCAAoC,qBAAqB,wBAAwB,oBAAoB,kBAAkB,sCAAsC,6CAA6C,aAAa,2BAA2B,qBAAqB,wCAAwC,6BAA6B,GAAG,mCAAmC,aAAa,2BAA2B,wBAAwB,0DAA0D,yCAAyC,yBAAyB,cAAc,iDAAiD,uBAAuB,sBAAsB,mBAAmB,OAAO,qCAAqC,IAAI,wBAAwB,SAAS,sFAAsF,qDAAqD,kBAAkB,aAAa,kCAAkC,2DAA2D,kBAAkB,gCAAgC,sCAAsC,yBAAyB,QAAQ,IAAI,oCAAoC,qBAAqB,2DAA2D,oCAAoC,4CAA4C,+DAA+D,iGAAiG,mDAAmD,yFAAyF,SAAS;;AAEvjF;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,KAAK;;AAEL;AACA;AACA;AACA,yCAAyC;AACzC,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mIAAmI;AACnI;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,oCAAoC;;AAEpC;AACA,sCAAsC;AACtC;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qCAAqC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"/js/admin.js","sourcesContent":["var halfmoon = require(\"./js/halfmoon-module\");\n\nmodule.exports = halfmoon;","/*\n* -----------------------------------------------------------------------------\n* Halfmoon JS (module)\n* Version: 1.1.1\n* https://www.gethalfmoon.com\n* Copyright, Halfmoon UI\n* Licensed under MIT (https://www.gethalfmoon.com/license)\n* -----------------------------------------------------------------------------\n* The above notice must be included in its entirety when this file is used.\n*/\n\n/* Start polyfills */\n\n// Polyfill for Element.matches()\nif (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\n// Polyfill for Element.closest()\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        var el = this;\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\n\n// Polyfill for Element.classList (http://purl.eligrey.com/github/classList.js/blob/master/classList.js)\n\"document\"in self&&(\"classList\"in document.createElement(\"_\")&&(!document.createElementNS||\"classList\"in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))||!function(t){\"use strict\";if(\"Element\"in t){var e=\"classList\",n=\"prototype\",i=t.Element[n],s=Object,r=String[n].trim||function(){return this.replace(/^\\s+|\\s+$/g,\"\")},o=Array[n].indexOf||function(t){for(var e=0,n=this.length;n>e;e++)if(e in this&&this[e]===t)return e;return-1},c=function(t,e){this.name=t,this.code=DOMException[t],this.message=e},a=function(t,e){if(\"\"===e)throw new c(\"SYNTAX_ERR\",\"The token must not be empty.\");if(/\\s/.test(e))throw new c(\"INVALID_CHARACTER_ERR\",\"The token must not contain space characters.\");return o.call(t,e)},l=function(t){for(var e=r.call(t.getAttribute(\"class\")||\"\"),n=e?e.split(/\\s+/):[],i=0,s=n.length;s>i;i++)this.push(n[i]);this._updateClassName=function(){t.setAttribute(\"class\",this.toString())}},u=l[n]=[],h=function(){return new l(this)};if(c[n]=Error[n],u.item=function(t){return this[t]||null},u.contains=function(t){return~a(this,t+\"\")},u.add=function(){var t,e=arguments,n=0,i=e.length,s=!1;do t=e[n]+\"\",~a(this,t)||(this.push(t),s=!0);while(++n<i);s&&this._updateClassName()},u.remove=function(){var t,e,n=arguments,i=0,s=n.length,r=!1;do for(t=n[i]+\"\",e=a(this,t);~e;)this.splice(e,1),r=!0,e=a(this,t);while(++i<s);r&&this._updateClassName()},u.toggle=function(t,e){var n=this.contains(t),i=n?e!==!0&&\"remove\":e!==!1&&\"add\";return i&&this[i](t),e===!0||e===!1?e:!n},u.replace=function(t,e){var n=a(t+\"\");~n&&(this.splice(n,1,e),this._updateClassName())},u.toString=function(){return this.join(\" \")},s.defineProperty){var f={get:h,enumerable:!0,configurable:!0};try{s.defineProperty(i,e,f)}catch(p){void 0!==p.number&&-2146823252!==p.number||(f.enumerable=!1,s.defineProperty(i,e,f))}}else s[n].__defineGetter__&&i.__defineGetter__(e,h)}}(self),function(){\"use strict\";var t=document.createElement(\"_\");if(t.classList.add(\"c1\",\"c2\"),!t.classList.contains(\"c2\")){var e=function(t){var e=DOMTokenList.prototype[t];DOMTokenList.prototype[t]=function(t){var n,i=arguments.length;for(n=0;i>n;n++)t=arguments[n],e.call(this,t)}};e(\"add\"),e(\"remove\")}if(t.classList.toggle(\"c3\",!1),t.classList.contains(\"c3\")){var n=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(t,e){return 1 in arguments&&!this.contains(t)==!e?e:n.call(this,t)}}\"replace\"in document.createElement(\"_\").classList||(DOMTokenList.prototype.replace=function(t,e){var n=this.toString().split(\" \"),i=n.indexOf(t+\"\");~i&&(n=n.slice(i),this.remove.apply(this,n),this.add(e),this.add.apply(this,n.slice(1)))}),t=null}());\n\n/* End polyfills */\n\n\n/* Halfmoon JS core */\n\nvar halfmoon = {\n    // Getting the required elements\n    // Re-initialized once the DOM is loaded (to avoid issues with virtual DOM)\n    pageWrapper: document.getElementsByClassName(\"page-wrapper\")[0],\n    stickyAlerts: document.getElementsByClassName(\"sticky-alerts\")[0],\n\n    darkModeOn: false, // Also re-initialized once the DOM is loaded (see below)\n\n    // Create cookie\n    createCookie: function(name, value, days) {\n        var expires;\n        if (days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n            expires = \"; expires=\" + date.toGMTString();\n        }\n        else {\n            expires = \"\";\n        }\n        document.cookie = name + \"=\" + value + expires + \"; path=/\";\n    },\n\n    // Read cookie\n    readCookie: function(name) {\n        var nameEQ = name + \"=\";\n        var ca = document.cookie.split(\";\");\n        for(var i=0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === \" \") {\n                c = c.substring(1, c.length);\n            }\n            if (c.indexOf(nameEQ) === 0) {\n                return c.substring(nameEQ.length,c.length);\n            }\n        }\n        return null;\n    },\n\n    // Erase cookie\n    eraseCookie: function(name) {\n        this.createCookie(name, \"\", -1);\n    },\n\n    // Toggle light/dark mode \n    toggleDarkMode: function() {\n        if (document.body.classList.contains(\"dark-mode\")) {\n            document.body.classList.remove(\"dark-mode\");\n            this.darkModeOn = false;\n            this.createCookie(\"halfmoon_preferredMode\", \"light-mode\", 365);\n        } else {\n            document.body.classList.add(\"dark-mode\");\n            this.darkModeOn = true;\n            this.createCookie(\"halfmoon_preferredMode\", \"dark-mode\", 365);\n        }\n    },\n\n    // Get preferred mode\n    getPreferredMode: function() {\n        if (this.readCookie(\"halfmoon_preferredMode\")) {\n            return this.readCookie(\"halfmoon_preferredMode\");\n        } else {\n            return \"not-set\";\n        }\n    },\n\n    // Toggles sidebar\n    toggleSidebar: function() {\n        if (this.pageWrapper) {\n            if (this.pageWrapper.getAttribute(\"data-sidebar-hidden\")) {\n                this.pageWrapper.removeAttribute(\"data-sidebar-hidden\");\n            } else {\n                this.pageWrapper.setAttribute(\"data-sidebar-hidden\", \"hidden\");\n            }\n        }\n    },\n\n    // Deactivate all the dropdown toggles when another one is active\n    deactivateAllDropdownToggles: function() {\n        var activeDropdownToggles = document.querySelectorAll(\"[data-toggle='dropdown'].active\");\n        for (var i = 0; i < activeDropdownToggles.length; i++) {\n            activeDropdownToggles[i].classList.remove(\"active\");\n            activeDropdownToggles[i].closest(\".dropdown\").classList.remove(\"show\");\n        }\n    },\n\n    // Toggle modal (using Javascript)\n    toggleModal: function(modalId) {\n        var modal = document.getElementById(modalId);\n\n        if (modal) {\n            modal.classList.toggle(\"show\");\n        }\n    },\n\n    /* Code block for handling sticky alerts */\n\n    // Make an ID for an element\n    makeId: function(length) {\n        var result = \"\";\n        var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    },\n\n    // Toast an alert (show, fade, dispose)\n    toastAlert: function(alertId, timeShown) {\n        var alertElement = document.getElementById(alertId);\n\n        // Setting the default timeShown\n        if (timeShown === undefined) {\n            timeShown = 5000;\n        }\n\n        // Alert is only toasted if it does not have the .show class\n        if (!alertElement.classList.contains(\"show\")) {\n            // Add .alert-block class if it does not exist\n            if (!alertElement.classList.contains(\"alert-block\")) {\n                alertElement.classList.add(\"alert-block\");\n            }\n\n            // Show the alert\n            // The 0.25 seconds delay is for the animation\n            setTimeout(function() {\n                alertElement.classList.add(\"show\");\n            }, 250);\n\n            // Wait some time (timeShown + 250) and fade out the alert\n            var timeToFade = timeShown + 250;\n            setTimeout(function() {\n                alertElement.classList.add(\"fade\");\n            }, timeToFade);\n\n            // Wait some more time (timeToFade + 500) and dispose the alert (by removing the .alert-block class)\n            // Again, the extra delay is for the animation\n            // Remove the .show and .fade classes (so the alert can be toasted again)\n            var timeToDestroy = timeToFade + 500;\n            setTimeout(function() {\n                alertElement.classList.remove(\"alert-block\");\n                alertElement.classList.remove(\"show\");\n                alertElement.classList.remove(\"fade\");\n            }, timeToDestroy);\n        }\n    },\n\n    // Create a sticky alert, display it, and then remove it\n    initStickyAlert: function(param) {\n        // Setting the variables from the param\n        var content = (\"content\" in param) ? param.content: \"\";\n        var title = (\"title\" in param) ? param.title: \"\";\n        var alertType = (\"alertType\" in param) ? param.alertType: \"\";\n        var fillType = (\"fillType\" in param) ? param.fillType: \"\";\n        var hasDismissButton = (\"hasDismissButton\" in param) ? param.hasDismissButton: true;\n        var timeShown = (\"timeShown\" in param) ? param.timeShown: 5000;\n\n        // Create the alert element\n        var alertElement = document.createElement(\"div\");\n\n        // Set ID to the alert element\n        alertElement.setAttribute(\"id\", this.makeId(6));\n\n        // Add the title\n        if (title) {\n            content = \"<h4 class='alert-heading'>\" + title + \"</h4>\" + content;\n        }\n\n        // Add the classes to the alert element\n        alertElement.classList.add(\"alert\");\n        if (alertType) {\n            alertElement.classList.add(alertType);\n        }\n        if (fillType) {\n            alertElement.classList.add(fillType);\n        }\n\n        // Add the close button to the content (if required)\n        if (hasDismissButton) {\n            content = \"<button class='close' data-dismiss='alert' type='button' aria-label='Close'><span aria-hidden='true'>&times;</span></button>\" + content;\n        }\n\n        // Add the content to the alert element\n        alertElement.innerHTML = content;\n\n        // Append the alert element to the sticky alerts\n        this.stickyAlerts.insertBefore(alertElement, this.stickyAlerts.childNodes[0]);\n\n        // Toast the alert\n        this.toastAlert(alertElement.getAttribute(\"id\"), timeShown);\n    },\n\n    /* End code block for handling sticky alerts */\n\n    // Click handler that can be overridden by users if needed\n    clickHandler: function(event) {},\n\n    // Keydown handler that can be overridden by users if needed\n    keydownHandler: function(event) {},\n}\n\n\n/* Things done once the DOM is loaded */\n\nfunction halfmoonOnDOMContentLoaded() {\n    // Re-initializing the required elements (to avoid issues with virtual DOM)\n    if (!halfmoon.pageWrapper) {\n        halfmoon.pageWrapper = document.getElementsByClassName(\"page-wrapper\")[0];\n    }\n    if (!halfmoon.stickyAlerts) {\n        halfmoon.stickyAlerts = document.getElementsByClassName(\"sticky-alerts\")[0];\n    }\n\n    // Handle the cookie and variable for dark mode\n    // 1. First preference is given to the cookie if it exists\n    if (halfmoon.readCookie(\"halfmoon_preferredMode\")) {\n        if (halfmoon.readCookie(\"halfmoon_preferredMode\") == \"dark-mode\") {\n            halfmoon.darkModeOn = true;\n        } else {\n            halfmoon.darkModeOn = false;\n        }\n    } else {\n        // 2. If cookie does not exist, next preference is for the dark mode setting\n        if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n            halfmoon.darkModeOn = true;\n        } else {\n            // 3. If all else fails, re-initialize the dark mode preference depending on the .dark-mode class\n            if (document.body.classList.contains(\"dark-mode\")) {\n                halfmoon.darkModeOn = true;\n            } else {\n                halfmoon.darkModeOn = false;\n            }\n        }\n    }\n\n    // Automatically set preferred theme\n    // But only if one of the data-attribute is provided\n    if (document.body.getAttribute(\"data-set-preferred-mode-onload\") || document.body.getAttribute(\"data-set-preferred-theme-onload\")) {\n        if (halfmoon.darkModeOn) {\n            if (!document.body.classList.contains(\"dark-mode\")) {\n                document.body.classList.add(\"dark-mode\");\n            }\n        } else {\n            if (document.body.classList.contains(\"dark-mode\")) {\n                document.body.classList.remove(\"dark-mode\");\n            }\n        }\n    }\n\n    // Hiding sidebar on first load on small screens (unless data-attribute provided)\n    // Or on larger screens when sidebar type is overlayed-all\n    if (document.documentElement.clientWidth <= 768) {\n        if (halfmoon.pageWrapper) {\n            if (!halfmoon.pageWrapper.getAttribute(\"data-show-sidebar-onload-sm-and-down\")) {\n                halfmoon.pageWrapper.setAttribute(\"data-sidebar-hidden\", \"hidden\");\n            }\n        }\n    } else {\n        if (halfmoon.pageWrapper) {\n            if (halfmoon.pageWrapper.getAttribute(\"data-sidebar-type\") === \"overlayed-all\") {\n                halfmoon.pageWrapper.setAttribute(\"data-sidebar-hidden\", \"hidden\");\n            }\n        }\n    }\n\n    // Adding the click event listener\n    document.addEventListener(\n        \"click\",\n        function(event) {\n            var eventCopy = event;\n            var target = event.target;\n\n            // Handle clicks on dropdown toggles\n            if (target.matches(\"[data-toggle='dropdown']\") || target.matches(\"[data-toggle='dropdown'] *\")) {\n                if (target.matches(\"[data-toggle='dropdown'] *\")) {\n                    target = target.closest(\"[data-toggle='dropdown']\");\n                }\n                if (target.classList.contains(\"active\")) {\n                    target.classList.remove(\"active\");\n                    target.closest(\".dropdown\").classList.remove(\"show\");\n                } else {\n                    halfmoon.deactivateAllDropdownToggles();\n                    target.classList.add(\"active\");\n                    target.closest(\".dropdown\").classList.add(\"show\");\n                }\n            } else {\n                if (!target.matches(\".dropdown-menu *\")) {\n                    halfmoon.deactivateAllDropdownToggles();\n                }\n            }\n\n            // Handle clicks on alert dismiss buttons\n            if (target.matches(\".alert [data-dismiss='alert']\") || target.matches(\".alert [data-dismiss='alert'] *\")) {\n                if (target.matches(\".alert [data-dismiss='alert'] *\")) {\n                    target = target.closest(\".alert [data-dismiss='alert']\");\n                }\n                target.parentNode.classList.add(\"dispose\");\n            }\n\n            // Handle clicks on modal toggles\n            if (target.matches(\"[data-toggle='modal']\") || target.matches(\"[data-toggle='modal'] *\")) {\n                if (target.matches(\"[data-toggle='modal'] *\")) {\n                    target = target.closest(\"[data-toggle='modal']\");\n                }\n                var targetModal = document.getElementById(target.getAttribute(\"data-target\"));\n                if (targetModal) {\n                    if (targetModal.classList.contains(\"modal\")) {\n                        halfmoon.toggleModal(target.getAttribute(\"data-target\"));\n                    }\n                }\n            }\n\n            // Handle clicks on modal dismiss buttons\n            if (target.matches(\".modal [data-dismiss='modal']\") || target.matches(\".modal [data-dismiss='modal'] *\")) {\n                if (target.matches(\".modal [data-dismiss='modal'] *\")) {\n                    target = target.closest(\".modal [data-dismiss='modal']\");\n                }\n                target.closest(\".modal\").classList.remove(\"show\");\n            }\n\n            // Handle clicks on modal overlays\n            if (target.matches(\".modal-dialog\")) {\n                var parentModal = target.closest(\".modal\");\n\n                if (!parentModal.getAttribute(\"data-overlay-dismissal-disabled\")) {\n                    if (parentModal.classList.contains(\"show\")) {\n                        parentModal.classList.remove(\"show\");\n                    } else {\n                        window.location.hash = \"#\";\n                    }\n                }\n            }\n\n            // Call the click handler method to handle any logic set by the user in their projects to handle clicks\n            halfmoon.clickHandler(eventCopy);\n        }, \n        false\n    );\n\n    // Adding the key down event listener (for shortcuts and accessibility)\n    document.addEventListener(\n        \"keydown\",\n        function(event) {\n            var eventCopy = event;\n\n            // Shortcuts are triggered only if no input, textarea, or select has focus,\n            // If the control key or command key is not pressed down,\n            // And if the enabling data attribute is present on the DOM's body\n            if (!(document.querySelector(\"input:focus\") || document.querySelector(\"textarea:focus\") || document.querySelector(\"select:focus\"))) {\n                event = event || window.event;\n\n                if (!(event.ctrlKey || event.metaKey)) {\n                    // Toggle sidebar when [shift] + [S] keys are pressed\n                    if (document.body.getAttribute(\"data-sidebar-shortcut-enabled\")) {\n                        if (event.shiftKey && event.which == 83) {\n                            // Variable to store whether a modal is open or not\n                            var modalOpen = false;\n\n                            // Hash exists, so we check if it belongs to a modal\n                            if (window.location.hash) {\n                                var hash = window.location.hash.substring(1);\n                                var elem = document.getElementById(hash);\n                                if (elem) {\n                                    if (elem.classList.contains(\"modal\")) {\n                                        modalOpen = true;\n                                    }\n                                }\n                            }\n                            // Check for a modal with the .show class\n                            if (document.querySelector(\".modal.show\")) {\n                                modalOpen = true;\n                            }\n\n                            // This shortcut works only if no modal is open\n                            if (!modalOpen) {\n                                halfmoon.toggleSidebar();\n                                event.preventDefault();\n                            }\n                        }\n                    }\n\n                    // Toggle dark mode when [shift] + [D] keys are pressed\n                    if (document.body.getAttribute(\"data-dm-shortcut-enabled\")) {\n                        if (event.shiftKey && event.which == 68) {\n                            halfmoon.toggleDarkMode();\n                            event.preventDefault();\n                        }\n                    }\n                }\n            }\n\n            // Handling other keydown events\n            if (event.which === 27) {\n                // Close dropdown menu (if one is open) when [esc] key is pressed\n                if (document.querySelector(\"[data-toggle='dropdown'].active\")) {\n                    var elem = document.querySelector(\"[data-toggle='dropdown'].active\");\n                    elem.classList.remove(\"active\");\n                    elem.closest(\".dropdown\").classList.remove(\"show\");\n                    event.preventDefault();\n                }\n                // Close modal (if one is open, and if no dropdown menu is open) when [esc] key is pressed\n                // Conditional on dropdowns so that dropdowns on modals can be closed with the keyboard without closing the modal\n                else {\n                    // Hash exists, so we check if it belongs to a modal\n                    if (window.location.hash) {\n                        var hash = window.location.hash.substring(1);\n                        var elem = document.getElementById(hash);\n                        if (elem) {\n                            if (elem.classList.contains(\"modal\")) {\n                                if (!elem.getAttribute(\"data-esc-dismissal-disabled\")) {\n                                    window.location.hash = \"#\";\n                                    event.preventDefault();\n                                }\n                            }\n                        }\n                    }\n                    // Check for a modal with the .show class\n                    if (document.querySelector(\".modal.show\")) {\n                        var elem = document.querySelector(\".modal.show\");\n                        if (!elem.getAttribute(\"data-esc-dismissal-disabled\")) {\n                            elem.classList.remove(\"show\");\n                            event.preventDefault();\n                        }\n                    }\n                }\n            }\n\n            // Call the keydown handler method to handle any logic set by the user in their projects to handle keydown events\n            halfmoon.keydownHandler(eventCopy);\n        }\n    );\n\n    // Handling custom file inputs\n    var halfmoonCustomFileInputs = document.querySelectorAll(\".custom-file input\");\n    for (var i = 0; i < halfmoonCustomFileInputs.length; i++) {\n        var customFile = halfmoonCustomFileInputs[i];\n        // Create file name container element, add the class name, and set default value\n        // Append it to the custom file element\n        var fileNamesContainer = document.createElement(\"div\");\n        fileNamesContainer.classList.add(\"file-names\");\n        var dataDefaultValue = customFile.getAttribute(\"data-default-value\");\n        if (dataDefaultValue) {\n            fileNamesContainer.innerHTML = dataDefaultValue;\n        } else {\n            fileNamesContainer.innerHTML = \"No file chosen\";\n        }\n        customFile.parentNode.appendChild(fileNamesContainer);\n\n        // Add the event listener that will update the contents of the file name container element on change\n        customFile.addEventListener(\n            \"change\",\n            function(event) {\n                fileNamesContainer = event.target.parentNode.querySelector(\".file-names\");\n                if (event.target.files.length === 1) {\n                    fileNamesContainer.innerHTML = event.target.files[0].name;\n                } else if (event.target.files.length > 1) {\n                    fileNamesContainer.innerHTML = event.target.files.length + \" files\";\n                } else {\n                    fileNamesContainer.innerHTML = \"No file chosen\";\n                }\n            }\n        );\n    }\n\n    // Adding the .with-transitions class to the page-wrapper so that transitions are enabled\n    // This way, the weird bug on Chrome is avoided, where the transitions run on load\n    if (halfmoon.pageWrapper) {\n        halfmoon.pageWrapper.classList.add(\"with-transitions\");\n    }\n}\n\n// Add the halfmoonOnDOMContentLoaded to the main halfmoon object\n// And export the halfmoon object as a module\nhalfmoon.onDOMContentLoaded = halfmoonOnDOMContentLoaded;\nmodule.exports = halfmoon;\n"],"sourceRoot":""}